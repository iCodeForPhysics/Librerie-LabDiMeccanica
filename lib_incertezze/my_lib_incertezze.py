




########################################################################################################## 
#  /$$    /$$                              /$$                                      /$$$$$$       /$$    #
# | $$   | $$                             |__/                                     /$$$_  $$    /$$$$    #
# | $$   | $$ /$$$$$$   /$$$$$$   /$$$$$$$ /$$  /$$$$$$  /$$$$$$$   /$$$$$$       | $$$$\ $$   |_  $$    #
# |  $$ / $$//$$__  $$ /$$__  $$ /$$_____/| $$ /$$__  $$| $$__  $$ /$$__  $$      | $$ $$ $$     | $$    #
#  \  $$ $$/| $$$$$$$$| $$  \__/|  $$$$$$ | $$| $$  \ $$| $$  \ $$| $$$$$$$$      | $$\ $$$$     | $$    #
#   \  $$$/ | $$_____/| $$       \____  $$| $$| $$  | $$| $$  | $$| $$_____/      | $$ \ $$$     | $$    #
#    \  $/  |  $$$$$$$| $$       /$$$$$$$/| $$|  $$$$$$/| $$  | $$|  $$$$$$$      |  $$$$$$//$$ /$$$$$$  #
#     \_/    \_______/|__/      |_______/ |__/ \______/ |__/  |__/ \_______/       \______/|__/|______/  #
##########################################################################################################                                                                                                 




from sympy import symbols, diff, sqrt

def incRipetute(sd, n, ris, sb): # Incertezza per misurazioni ripetute
    sigma=sqrt((sd/sqrt(n))**2 +(ris/sqrt(12))**2 + (sb)**2)
    return sigma

def incSingole(sd, ris, sb): # Incertezza per misurazioni singole
    sigma=sqrt((sd)**2 + (ris/sqrt(12))**2 + (sb)**2)
    return sigma

def incPropagate(f, x, y, z, xv=.0, yv=.0, zv=.0, s_x=.0, s_y=.0, s_z=.0): # Propagazione delle incertezze
    inc = sqrt((f.diff(x).subs(x, xv)**2) * (s_x**2) + (f.diff(y).subs(y, yv)**2) * (s_y**2) + (f.diff(z).subs(z, zv)**2) * (s_z**2))
    return inc
